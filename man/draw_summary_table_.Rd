% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/draw_summary_table_.R
\name{draw_summary_table_}
\alias{draw_summary_table_}
\title{Draw results summary table}
\usage{
draw_summary_table_(
  .PSA_data,
  .wtp_ = c(20000, 30000),
  .units_ = "Â£",
  .effects_label_ = "QALYs",
  .beautify_ = TRUE,
  .long_ = TRUE,
  .individual_evpi_ = TRUE,
  .evpi_population_ = NULL,
  .discount_rate_ = 0.035,
  .time_horion_ = NULL,
  .effs_accuracy_ = 0.001
)
}
\arguments{
\item{.PSA_data}{A list of class shinyPSA that contains summary PSA
results.}

\item{.wtp_}{A numeric vector containing the willingness-to-pay
value(s) to be considered in the summary table. Default values are
\code{c(20,000, 30,000)}}

\item{.units_}{A character, the units to associate with the
monitory values in the summary table. Default is sterling pounds
(GBP) \code{"\u00A3"}.}

\item{.effects_label_}{The label or name to be given to the effects
column in the summary table. Default is QALYs.}

\item{.beautify_}{Return a visually improved version of the table. The
returned version is built using DT::datatable()}

\item{.long_}{Logical (default \code{TRUE}) for whether a long version
of the table is to be returned. If \code{FALSE}, a wide version of the
table will be returned}

\item{.individual_evpi_}{Logical (default \code{TRUE}) to return
individual EVPI, otherwise population EVPI will be reported}

\item{.evpi_population_}{The size of the population that is annually
affected by the interventions under study}

\item{.discount_rate_}{The discount rate used to discount future
affected populations.}

\item{.time_horion_}{The time expected to pass (in years) before the
interventions under consideration change (how long before the decision
under consideration become obsolete or requires updating)}

\item{.effs_accuracy_}{Number of digits for effects measure; default is 3 and
is expressed as 1e-3 or 0.001.}
}
\value{
A table, dataframe, tibble or DT objects.
}
\description{
Draw results summary table
}
\examples{
\dontrun{
library(ShinyPSA)

PSA_summary <- summarise_PSA_(
  .effs = as_tibble(ShinyPSA::Smoking_PSA$e),
  .costs = as_tibble(ShinyPSA::Smoking_PSA$c),
  .interventions = ShinyPSA::Smoking_PSA$treats)

t <- draw_summary_table_(.PSA_data = PSA_summary,
                        .wtp_ = c(100, 20000, 30000),
                        .beautify_ = TRUE,
                        .long_ = TRUE)
t

t <- draw_summary_table_(.PSA_data = PSA_summary,
                        .wtp_ = c(100, 20000, 30000),
                        .beautify_ = TRUE,
                        .long_ = F)
t
}

}
